<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
<!--    we import data in musicPlayer.properties-->
    <context:property-placeholder location="classpath:musicPlayer.properties"/>

    <context:component-scan base-package="kg.surkeev.spring_course"/>
<!--    <bean id="musicBean" class="kg.surkeev.spring_course.ClassicalMusic"-->
<!--          init-method="doMyInit" destroy-method="doMyDestroy"-->
<!--          factory-method="getClassicalMusic"-->
<!--    />-->

<!--    <bean id="musicTaskBean" class="kg.surkeev.spring_course.KyrgyzMusic" scope="prototype"-->
<!--          init-method="doMyInit" destroy-method="doMyDestroy"/>-->

<!--          when we use scope="prototype" we can't use destroy method-->


<!--    <bean id="classicalMusic"-->
<!--          class="kg.surkeev.spring_course.ClassicalMusic">-->
<!--    </bean>-->
<!--    <bean id="kyrgyzMusic"-->
<!--          class="kg.surkeev.spring_course.KyrgyzMusic">-->
<!--    </bean>-->
<!--    <bean id="rockMusic"-->
<!--          class="kg.surkeev.spring_course.RockMusic">-->
<!--    </bean>-->

<!--    <bean id="musicPlayer" class="kg.surkeev.spring_course.MusicPlayer"-->
<!--          scope="prototype">-->
<!--&lt;!&ndash;        when implementation dependency injection with constructor-->
<!--            <constructor-arg ref="musicBean"/>&ndash;&gt;-->

<!--&lt;!&ndash;        when implementation dependency injection with setter method&ndash;&gt;-->
<!--        <property name="musicList">-->
<!--            <list>-->
<!--                <ref bean="rockMusic"/>-->
<!--                <ref bean="kyrgyzMusic"/>-->
<!--                <ref bean="classicalMusic"/>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="name" value="${musicPlayer.name}"/>-->
<!--        <property name="volume" value="${musicPlayer.volume}"/>-->
<!--    </bean>-->

</beans>
